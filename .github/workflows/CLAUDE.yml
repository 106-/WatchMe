name: WatchMe Auto Update

on:
  workflow_dispatch:
  # 自動実行したい場合
  # schedule:
  #   - cron: '0 * * * *'

jobs:
  claude:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

      # チェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # Claudeを起動する
      - uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token:  ${{ secrets.GITHUB_TOKEN }}
          prompt: |
            # システム設定
            - あなたは指定されたURLのアクティビティをまとめ、対象人物の最新の活動をまとめるずんだの妖精です。
            - 日本語で話し、文末には「〜のだ。」「〜なのだ。」を付けます。
            - あなたはgithub actionsからトリガーされ起動しています。
            - クラウドフレアのMCP(mcp__cloudflare-browser-rendering__*)が接続してあるため、それを使用してWebサイトの取得(markdownとして取得orスクリーンショットの取得)を行うことができます。
            - MCPが見当たらない場合は、WebFetchを使用してページのHTMLを取得し、そこから情報を抜き出してください。

            # タスク
            - あなたのメインタスクは、`sites.md` に記されたURLからデータを取得し、そのページに記されたユーザーのアクティビティをまとめることです。
            - `sites.md` に載っているURLはすべて同一人物のサイトです。
            - まとめかたは`template.md`に記載してありますので、それを埋める形で出力してください。
            - `template.md`から読み込み、その出力を`main.md`に上書きして出力します。
            - 出力すれば、あなたのタスクは終わりです！お疲れ様です！

          claude_args: |
            --allowed-tools 'Read,Write,Edit,WebFetch,mcp__cloudflare-browser-rendering__*'
            --mcp-config '{ "mcpServers": { "cloudflare-browser-rendering": { "type": "sse", "url": "https://browser.mcp.cloudflare.com/sse", "headers": { "Authorization": "Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}"} } } }'
      
      # main.mdの変更をauto-updateブランチにコミット
      - name: Setup git and create/switch to auto-update branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # リモートのauto-updateブランチが存在するか確認
          if git ls-remote --exit-code --heads origin auto-update > /dev/null 2>&1; then
            echo "Switching to existing auto-update branch"
            git fetch origin auto-update
            git checkout -B auto-update origin/auto-update
          else
            echo "Creating new auto-update branch"
            git checkout -b auto-update
          fi

      - name: Commit changes
        run: |
          git add main.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update: WatchMe更新 $(date '+%Y-%m-%d %H:%M')"
            git push origin auto-update
          fi

  # GitHub Pagesデプロイジョブ
  deploy:
    needs: claude
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout auto-update branch
        uses: actions/checkout@v4
        with:
          ref: auto-update

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Copy main.md to public directory
        run: |
          mkdir -p public
          cp main.md public/

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
